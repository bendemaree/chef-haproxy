global
        log 127.0.0.1   local0
        log 127.0.0.1   local1 notice
        #log loghost    local0 info
        maxconn 4096
        #debug
        #quiet
        user haproxy
        group haproxy

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        retries 3
        option redispatch
        maxconn 2000
        contimeout      5000
        clitimeout      50000
        srvtimeout      50000
        <% if node["haproxy"]["x_forwarded_for"] -%>
        option httpclose
        option forwardfor
        <% end -%>
        
# Set up application listeners here.
listen application 0.0.0.0:<%= node["haproxy"]["incoming_port"] %>
  balance <%= node["haproxy"]["balance_algorithm"] %>
  <% @backend_servers.each do |server| -%>
  server <%= server[:hostname] -%> 
    <%= server[:ipaddress] -%>:<%= server[:port] -%> 
    <%= "cookie #{server[:hostname]}" unless node["haproxy"]["cookie_prefix"].nil? && node["haproxy"]["cookie_insert"].nil? -%>
    weight <%= server[:proxy_weight] -%> 
    maxconn <%= server[:max_connections] %> check
  <% end -%>

<% if node["haproxy"]["enable_ssl"] -%>
listen ssl_application 0.0.0.0:<%= node["haproxy"]["ssl_incoming_port"] %>
  balance <%= node["haproxy"]["balance_algorithm"] %>
  mode tcp
<% @backend_servers.each do |server| -%>
  server <%= server[:hostname] -%>
         <%= server[:ipaddress] -%>:<%= server[:ssl_port] -%> 
         weight <%= server[:proxy_weight] -%> 
         maxconn <%= server[:max_connections] %> check
  <% end -%>
<% end -%>

<% if node["haproxy"]["enable_admin"] -%>
listen admin 0.0.0.0:22002
  mode http
  stats uri /
<% end -%>
